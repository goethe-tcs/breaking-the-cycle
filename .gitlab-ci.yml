stages:
  - primary
  - extras

before_script:
  - git submodule update --init --recursive

cargo-test:
  image: gitlab.ae.cs.uni-frankfurt.de:5001/ae-ci/aeffm-rust-nightly
  stage: primary
  script:
    - cargo test

cargo-test-release:
  image: gitlab.ae.cs.uni-frankfurt.de:5001/ae-ci/aeffm-rust-nightly
  stage: extras
  script:
    - cargo test --release

cargo-clippy:
  image: gitlab.ae.cs.uni-frankfurt.de:5001/ae-ci/aeffm-rust-nightly
  stage: primary
  script:
    - cargo clippy --all-features -- -D clippy::all

cargo-format:
  image: gitlab.ae.cs.uni-frankfurt.de:5001/ae-ci/aeffm-rust-nightly
  stage: extras
  script:
    - cargo fmt --check

coverage:
  image: gitlab.ae.cs.uni-frankfurt.de:5001/ae-ci/aeffm-rust-nightly
  stage: extras
  variables:
    RUSTFLAGS: "-Zinstrument-coverage"
    LLVM_PROFILE_FILE: "coverage-%p-%m.profraw"
  script:
    - cargo test
    - grcov . --binary-path ./target/debug/ -s . -t html --branch --ignore-not-existing --ignore "*cargo*" -o ./coverage/
    - grcov . --binary-path ./target/debug/ -s . -t cobertura --branch --ignore-not-existing --ignore "*cargo*" -o coverage.xml
    - grcov . --binary-path ./target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore "*cargo*" -o coverage.lcov
    - lcov --summary coverage.lcov
  artifacts:
    reports:
      cobertura: coverage.xml
    paths:
      - 'coverage'
